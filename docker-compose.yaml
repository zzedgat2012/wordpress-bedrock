services:
  traefik:
    image: traefik:v2.10
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 10s
      timeout: 2s
      retries: 3
    networks:
      - wordpress_net

  wordpress:
    image: fydron/woprdpress-bedrock:latest
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=false"
    depends_on:
      - mariadb
      - redis
    environment:
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=${DB_PASSWORD}
      - WORDPRESS_DB_NAME=wordpress
      - WORDPRESS_CONFIG_EXTRA=
        define('WP_REDIS_HOST', 'redis');
        define('WP_REDIS_PORT', 6379);
        define('WP_CACHE', true);
        define('WP_ALLOW_MULTISITE', true);
        define('MULTISITE', true);
        define('SUBDOMAIN_INSTALL', true);
        define('DOMAIN_CURRENT_SITE', 'gutenberg.site.local');
        define('PATH_CURRENT_SITE', '/');
        define('SITE_ID_CURRENT_SITE', 1);
        define('BLOG_ID_CURRENT_SITE', 1);
    volumes:
      - wordpress_data:/var/www/html
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - wordpress_net

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.wordpress.rule=Host(`gutenberg.site.local`)"
        - "traefik.http.routers.wordpress.entrypoints=websecure"
        - "traefik.http.services.wordpress.loadbalancer.server.port=8081"
    depends_on:
      - wordpress
    volumes:
      - wordpress_data:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8081",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - wordpress_net

  mariadb:
    image: mariadb:10.6
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=false"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_MAX_ALLOWED_PACKET=128M
      - MYSQL_INNODB_BUFFER_POOL_SIZE=256M
      - MYSQL_INNODB_LOG_FILE_SIZE=64M
      - MYSQL_INNODB_LOG_BUFFER_SIZE=64M
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "--password=$$MYSQL_ROOT_PASSWORD",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - wordpress_net

  redis:
    image: redis:alpine
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=false"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - wordpress_net

  minio:
    image: minio/minio
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.minio.rule=Host(`minio.gutenberg.site.local`)"
        - "traefik.http.routers.minio.entrypoints=websecure"
        - "traefik.http.services.minio.loadbalancer.server.port=9000"
        - "traefik.http.routers.minio-console.rule=Host(`minio-console.gutenberg.site.local`)"
        - "traefik.http.routers.minio-console.entrypoints=websecure"
        - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - wordpress_net

  n8n:
    image: n8nio/n8n
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.n8n.rule=Host(`n8n.gutenberg.site.local`)"
        - "traefik.http.routers.n8n.entrypoints=websecure"
        - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    environment:
      - DB_TYPE=mariadb
      - DB_HOST=mariadb
      - DB_DATABASE=n8n
      - DB_USER=wordpress
      - DB_PASSWORD=${DB_PASSWORD}
      - N8N_HOST=${N8N_HOST:-n8n.gutenberg.site.local}
      - WEBHOOK_URL=https://${N8N_HOST:-n8n.gutenberg.site.local}/
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - n8n_data:/home/node/.n8n
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - wordpress_net

  typebot:
    image: baptistearno/typebot-builder:latest
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.typebot.rule=Host(`typebot.gutenberg.site.local`)"
        - "traefik.http.routers.typebot.entrypoints=websecure"
        - "traefik.http.services.typebot.loadbalancer.server.port=3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@typebot-db:5432/typebot
      - NEXTAUTH_URL=https://typebot.gutenberg.site.local
      - NEXT_PUBLIC_VIEWER_URL=https://bot.gutenberg.site.local
      - ENCRYPTION_SECRET=${ENCRYPTION_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - S3_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - S3_SECRET_KEY=${MINIO_SECRET_KEY}
      - S3_BUCKET=typebot
      - S3_ENDPOINT=http://minio:9000
    depends_on:
      - typebot-db
      - minio
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - wordpress_net

  typebot-viewer:
    image: baptistearno/typebot-viewer:latest
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.typebot-viewer.rule=Host(`bot.gutenberg.site.local`)"
        - "traefik.http.routers.typebot-viewer.entrypoints=websecure"
        - "traefik.http.services.typebot-viewer.loadbalancer.server.port=3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@typebot-db:5432/typebot
      - NEXT_PUBLIC_VIEWER_URL=https://bot.gutenberg.site.local
      - ENCRYPTION_SECRET=${ENCRYPTION_SECRET}
      - S3_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - S3_SECRET_KEY=${MINIO_SECRET_KEY}
      - S3_BUCKET=typebot
      - S3_ENDPOINT=http://minio:9000
    depends_on:
      - typebot-db
      - minio
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - wordpress_net

  typebot-db:
    image: postgres:13
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=false"
    environment:
      - POSTGRES_DB=typebot
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - typebot_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d typebot"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - wordpress_net

volumes:
  wordpress_data:
  db_data:
  redis_data:
  minio_data:
  n8n_data:
  typebot_db_data:

networks:
  wordpress_net:
    driver: overlay
